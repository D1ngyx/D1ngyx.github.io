<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Aug 2025 13:16:15 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo入门</title>
      <link>http://localhost:1313/posts/hugo%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Sun, 24 Aug 2025 13:16:15 +0800</pubDate>
      <guid>http://localhost:1313/posts/hugo%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;h2 id=&#34;1-基本内容&#34;&gt;1. 基本内容&lt;/h2&gt;&#xA;&lt;h2 id=&#34;2-自定义主题&#34;&gt;2. 自定义主题&lt;/h2&gt;&#xA;&lt;h2 id=&#34;3-部署到github&#34;&gt;3. 部署到Github&lt;/h2&gt;&#xA;&lt;p&gt;​&#x9;部署到 Github 到方法有很多，这里介绍本人常用的一种。比较常见的是把public文件夹上传，但是个人感觉这样有点麻烦，一种更简洁的方法是导出 &lt;code&gt;docs&lt;/code&gt; 文件夹然后可以把这个项目上传。&lt;/p&gt;&#xA;&lt;h3 id=&#34;31-项目导出&#34;&gt;3.1 项目导出&lt;/h3&gt;&#xA;&lt;p&gt;​&#x9;首先把这个hugo项目导出到 &lt;code&gt;docs&lt;/code&gt; 文件夹。不同于直接使用 hugo 命令生成项目到 public 目录中。&lt;/p&gt;&#xA;&lt;p&gt;​&#x9;这里注意，导出到的 &lt;code&gt;--destination&lt;/code&gt; 指定的文件夹名字必须是 &lt;code&gt;docs&lt;/code&gt;。另一个 &lt;code&gt;--minify&lt;/code&gt; 这个参数顾名思义了，就是简化生产的文件，在使用之初不必在意。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; hugo --minify --destination docs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;​&#x9;如果正常，应在项目根路径下生成如下目录：&lt;/p&gt;&#xA;&lt;img src=&#34;http://localhost:1313/images/generate_docs.png&#34; alt=&#34;generate_docs&#34; width=&#34;10%&#34;&gt;&#xA;&lt;h3 id=&#34;32-github仓库设置&#34;&gt;3.2 Github仓库设置&lt;/h3&gt;&#xA;&lt;p&gt;​&#x9;原因在于，我们需要在 Github 的 Pages 页面做如下设置，让他从 &lt;code&gt;docs&lt;/code&gt; 路径下解析静态页面，而不是从默认的 root 路径下。&lt;/p&gt;&#xA;&lt;img src=&#34;http://localhost:1313/images/modify_github_pages.png&#34; alt=&#34;modify_github_pages&#34; width=&#34;50%&#34;&gt;</description>
    </item>
    <item>
      <title>Docker基础</title>
      <link>http://localhost:1313/posts/my-first-post/</link>
      <pubDate>Sun, 17 Aug 2025 09:52:15 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post/</guid>
      <description>&lt;h2 id=&#34;1-查看-image&#34;&gt;1. 查看 image&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;base&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;16:28:39&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; dingyx &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;base&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; ~&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker images&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;REPOSITORY   TAG                       IMAGE ID       CREATED        SIZE&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ubuntu       focal-20250404            8feb4d8ca535   &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt; months ago   101MB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ros          noetic-perception-focal   32370c500818   &lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt; years ago    4.89GB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;16:28:42&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;cost 0.095s&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; docker images&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;标题三&#34;&gt;标题三&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;hello&lt;/code&gt; you&lt;/p&gt;&#xA;&lt;h4 id=&#34;标题四&#34;&gt;标题四&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;标题四段落&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;2-创建-container&#34;&gt;2. 创建 container&lt;/h2&gt;&#xA;&lt;p&gt;💡解释：使用镜像 TAG &lt;code&gt;focal-20250404&lt;/code&gt; 创建一个名为 &lt;code&gt;ubuntu20&lt;/code&gt; 的container，并且通过 -v 命令把宿主机 &lt;code&gt;/Users/dingyx&lt;/code&gt; 目录下的所有文件，挂载到虚拟机 &lt;code&gt;/home/dingyx&lt;/code&gt; 的目录下。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;base&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;17:20:39&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; dingyx &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;base&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; ~&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker create -v /Users/dingyx/dockerSpace:/mnt -it --name ubuntu20 ubuntu:focal-20250404&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;40dbe94b240db92673accd73175f58d0348aed85288d1b0a26f445cda367e747&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;17:25:45&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;cost 0.947s&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; docker create -v /Users/dingyx:/home/dingyx -it --name ubuntu20 ubuntu:focal-20250404&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-查看-container&#34;&gt;3. 查看 container&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;base&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;17:29:25&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; dingyx &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;base&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; ~&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker ps -a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONTAINER ID   IMAGE                   COMMAND       CREATED         STATUS    PORTS     NAMES&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;40dbe94b240d   ubuntu:focal-20250404   &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;/bin/bash&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt; minutes ago   Created             ubuntu20&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;17:29:27&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;cost 0.097s&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; docker ps -a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-启动-container&#34;&gt;4. 启动 container&lt;/h2&gt;&#xA;&lt;p&gt;💡解释：根据查看 container 中的 NAMES 列，启动名为 NAMES 的一个镜像&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
